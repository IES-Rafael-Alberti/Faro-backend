-- MySQL Script generated by MySQL Workbench
-- Wed Jun  5 18:32:11 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema default_schema
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema faro
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `faro` ;

-- -----------------------------------------------------
-- Schema faro
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `faro` ;
USE `faro` ;

-- -----------------------------------------------------
-- Table `faro`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faro`.`users` ;

CREATE TABLE IF NOT EXISTS `faro`.`users` (
  `id` BINARY(16) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `first_surname` VARCHAR(45) NOT NULL,
  `second_surname` VARCHAR(45) NULL DEFAULT NULL,
  `email` VARCHAR(254) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `role` ENUM('admin', 'teacher', 'company', 'student') NOT NULL,
  `users_profile_user_profile_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_users_profile_idx` (`users_profile_user_profile_id`) VISIBLE,
  INDEX `fk_users_profile` (`users_profile_user_profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_profile`
    FOREIGN KEY (`users_profile_user_profile_id`)
    REFERENCES `faro`.`profile` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table `faro`.`profile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faro`.`profile` ;

CREATE TABLE IF NOT EXISTS `faro`.`profile` (
  `id` BINARY(16) NOT NULL,
  `users_profile_profile_picture` MEDIUMBLOB NULL DEFAULT NULL,
  `headline` VARCHAR(128) NULL DEFAULT NULL,
  `description` VARCHAR(512) NULL DEFAULT NULL,
  `occupation_status` ENUM('Working', 'Studying', 'Looking for a job') NULL DEFAULT NULL,
  `education_id` BINARY(16) NULL DEFAULT NULL,
  `recommendations_id` BINARY(16) NULL DEFAULT NULL,
  `experience_id` BINARY(16) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_profile_education` (`education_id` ASC) VISIBLE,
  INDEX `fk_profile_recommendations` (`recommendations_id` ASC) VISIBLE,
  INDEX `fk_profile_experience` (`experience_id` ASC) VISIBLE,
  CONSTRAINT `fk_profile_education`
    FOREIGN KEY (`education_id`)
    REFERENCES `faro`.`education` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_profile_recommendations`
    FOREIGN KEY (`recommendations_id`)
    REFERENCES `faro`.`recommendations` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_profile_experience`
    FOREIGN KEY (`experience_id`)
    REFERENCES `faro`.`experience` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE);

-- -----------------------------------------------------
-- Table `faro`.`recommendations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faro`.`recommendations` ;

CREATE TABLE IF NOT EXISTS `faro`.`recommendations` (
  `id` BINARY(16) NOT NULL,
  `profile_id` BINARY(16) NOT NULL,
  `sender_id` BINARY(16) NOT NULL,
  `message` VARCHAR(1024) NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_recommendations_profile` (`profile_id` ASC) VISIBLE,
  INDEX `fk_recommendations_users` (`sender_id` ASC) VISIBLE,
  CONSTRAINT `fk_recommendations_profile`
    FOREIGN KEY (`profile_id`)
    REFERENCES `faro`.`profile` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_recommendations_users`
    FOREIGN KEY (`sender_id`)
    REFERENCES `faro`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `faro`.`experience`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faro`.`experience` ;

CREATE TABLE IF NOT EXISTS `faro`.`experience` (
  `id` BINARY(16) NOT NULL,
  `profile_id` BINARY(16) NOT NULL,
  `company` VARCHAR(128) NOT NULL,
  `position` VARCHAR(128) NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NULL DEFAULT NULL,
  `description` VARCHAR(512) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_experience_profile` (`profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_experience_profile`
    FOREIGN KEY (`profile_id`)
    REFERENCES `faro`.`profile` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `faro`.`education`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faro`.`education` ;

CREATE TABLE IF NOT EXISTS `faro`.`education` (
  `id` BINARY(16) NOT NULL,
  `profile_id` BINARY(16) NOT NULL,
  `institution` VARCHAR(128) NOT NULL,
  `degree` VARCHAR(128) NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_education_profile` (`profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_education_profile`
    FOREIGN KEY (`profile_id`)
    REFERENCES `faro`.`profile` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

-- -----------------------------------------------------
-- Table `faro`.`publications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faro`.`publications` ;

CREATE TABLE IF NOT EXISTS `faro`.`publications` (
  `id` BINARY(16) NOT NULL,
  `msg` VARCHAR(2048) NOT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `user_id` BINARY(16) NOT NULL,
  `users__user_profile_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_publications_users1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_publications_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `faro`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `faro`.`direct_messages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faro`.`direct_messages` ;

CREATE TABLE IF NOT EXISTS `faro`.`direct_messages` (
  `user_direct_message_msg` VARCHAR(1024) NOT NULL,
  `user_direct_message_sender` BINARY(16) NOT NULL,
  `user_direct_message_receiver` BINARY(16) NOT NULL,
  `user_id` BINARY(16) NOT NULL,
  `users_profile_user_profile_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`user_direct_message_receiver`, `user_direct_message_sender`, `user_id`, `users_profile_user_profile_id`),
  INDEX `fk_direct_messages_users1_idx` (`user_id` ASC, `users_profile_user_profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_direct_messages_users1`
    FOREIGN KEY (`user_id` , `users_profile_user_profile_id`)
    REFERENCES `faro`.`users` (`id` , `users_profile_user_profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `faro`.`connection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faro`.`connection` ;

CREATE TABLE IF NOT EXISTS `faro`.`connection` (
  `id` BINARY(16) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `faro`.`profile_connection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faro`.`profile_connection` ;

CREATE TABLE IF NOT EXISTS `faro`.`profile_connection` (
  `profile_id` BINARY(16) NOT NULL,
  `connection_id` BINARY(16) NOT NULL,
  PRIMARY KEY (`profile_id`, `connection_id`),
  INDEX `fk_profile_connection_profile_idx` (`profile_id` ASC) VISIBLE,
  INDEX `fk_profile_connection_connection_idx` (`connection_id` ASC) VISIBLE,
  CONSTRAINT `fk_profile_connection_profile`
    FOREIGN KEY (`profile_id`)
    REFERENCES `faro`.`profile` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_profile_connection_connection`
    FOREIGN KEY (`connection_id`)
    REFERENCES `faro`.`connection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
